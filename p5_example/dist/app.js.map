{"version":3,"sources":["src/sketch.ts","src/circle.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,0CAAoB;AACpB,kCAA+B;AAE/B,oDAA8B;AAE9B,IAAM,MAAM,GAAG,UAAC,EAAM;IAEpB,IAAI,SAAS,GAAa,EAAE,CAAC;IAE7B,EAAE,CAAC,KAAK,GAAG;QACT,EAAE,CAAC,YAAY,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QAEjB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC;YACrE,SAAS,CAAC,IAAI,CAAC,IAAI,gBAAM,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC,CAAA;SACxC;IACH,CAAC,CAAA;IAED,EAAE,CAAC,IAAI,GAAG;QACR,SAAS,CAAC,OAAO,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,IAAI,EAAE,EAAb,CAAa,CAAC,CAAC;IAC7C,CAAC,CAAA;AACH,CAAC,CAAA;AAED,IAAI,YAAE,CAAC,MAAM,CAAC,CAAC;;;;;;;ACtBf;IAKE,gBAAY,EAAM,EAAE,UAAqB,EAAE,IAAY;QACrD,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;QACd,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;QACvB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IACpB,CAAC;IAED,qBAAI,GAAJ;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC;QAEpB,EAAE,CAAC,IAAI,EAAE,CAAC;QAEV,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,EAAE,CAAC,QAAQ,EAAE,CAAC;QACd,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAG,CAAC,CAAC,CAAC;QACpB,EAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAE7B,EAAE,CAAC,GAAG,EAAE,CAAC;IACX,CAAC;IACH,aAAC;AAAD,CAvBA,AAuBC,IAAA","file":"","sourcesContent":["import P5 from \"p5\";\r\nimport 'p5/lib/addons/p5.sound'\r\n\r\nimport Circle from \"./circle\";\r\n\r\nconst sketch = (p5: P5) => {\r\n\r\n  let myCircles: Circle[] = [];\r\n\r\n  p5.setup = () => {\r\n    p5.createCanvas(600, 400);\r\n    p5.background(0);\r\n\r\n    for (let i = 0; i < 10; i++) {\r\n      let pos = p5.createVector(p5.random(p5.width), p5.random(p5.height));\r\n      myCircles.push(new Circle(p5, pos, 15))\r\n    }\r\n  }\r\n\r\n  p5.draw = () => {\r\n    myCircles.forEach(circle => circle.draw());\r\n  }\r\n}\r\n\r\nnew P5(sketch);\r\n","import P5 from \"p5\";\r\n\r\nexport default class Circle {\r\n  _p5: P5;\r\n  _pos: P5.Vector;\r\n  _size: number;\r\n\r\n  constructor(p5: P5, atPosition: P5.Vector, size: number) {\r\n    this._p5 = p5;\r\n    this._pos = atPosition;\r\n    this._size = size;\r\n  }\r\n\r\n  draw() {\r\n    const p5 = this._p5;\r\n\r\n    p5.push();\r\n\r\n    p5.translate(this._pos);\r\n    p5.noStroke();\r\n    p5.fill(255, 0 , 0);\r\n    p5.ellipse(0, 0, this._size);\r\n\r\n    p5.pop();\r\n  }\r\n}\r\n"]}